#include "common.h"
#include "shared\waterconfig.h"
#include "iostructs\p_waterd.h"

Texture2D	s_distort;
#define POWER	0.5
//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
float4 _main( v2p I )
{
	float4	t_base	= tex2D(s_base, I.tbase);

	float2	t_d0	= tex2D(s_distort, I.tdist0).xy;
	float2	t_d1	= tex2D(s_distort, I.tdist1).xy;
	float2	distort	= (t_d0+t_d1)*0.5;                      // average
	float2	zero	= float2( 0.5, 0.5 );
	float2	faded	= lerp( distort, zero, t_base.a );

#if defined(USE_SOFT_WATER) && defined(NEED_SOFT_WATER)
	float	alphaDistort;
	float2	PosTc = I.tctexgen.xy/I.tctexgen.z;
#ifdef GBUFFER_OPTIMIZATION
	gbuffer_data gbd = gbuffer_load_data( PosTc, I.hpos );
#else
	gbuffer_data gbd = gbuffer_load_data( PosTc );
#endif
	float4 _P = float4( gbd.P, gbd.mtl );
	float waterDepth = _P.z-I.tctexgen.z;
	alphaDistort = saturate(5.0*waterDepth);
	faded 	= lerp  ( zero, faded, alphaDistort);
#endif	// defined(USE_SOFT_WATER) && defined(NEED_SOFT_WATER)

	float	alpha	= 0.5;
		faded	= faded*POWER - 0.5*POWER + 0.5;

        // out
#ifdef	NEED_SOFT_WATER
	return  float4( faded, 0.0, alpha );
#else	//	NEED_SOFT_WATER
	return  float4( faded, 0.08, alpha );
#endif	//	NEED_SOFT_WATER
}
